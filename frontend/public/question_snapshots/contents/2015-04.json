{"content": "<div id=\"problemtext\"><h2><a href=\"https://gpe3.acm-icpc.tw/domjudge2/pct/showproblem.php?probid=2015-04&amp;cid=5\" target=\"_blank\">2015-04:The N-th Element</a></h2>Time Limit: 1 sec<p></p><h3 style=\"text-align:left\">Description</h3><p>A[0 ~ N-1] and B[0 ~ N-1] are two strictly increasing arrays of N integers each; that is, A[i] &lt;&#160;A[j] if i &lt; j and B[i] &lt; B[j] if i &lt; j, where 0 &#8804;&#160;i, j &#8804;&#160;N-1.</p>&#13;\n<p>Definition of array A: A[i] = p*i<sup>2</sup> + q*i + r (where p, q, r are positive coefficients)</p>&#13;\n<p>Definition of array B: B[i] = x*i<sup>2</sup>&#160;+ y*i + z (where x, y, z are positive coefficients)</p>&#13;\n<p>You can assume that all of the numbers can be stored in long long int (64 bits). Your task is to \"efficiently\" find the N-th smallest element among these two arrays of N integers each (thus a total of 2*N integers).</p>&#13;\n<p><span style=\"font-size: 10px;\">For example, suppose p=2, q=2, r=2, and x=1, y=2, z=3,&#160;that is, <span style=\"color: #ff0000;\">A[i] = 2*i</span></span><span style=\"color: #ff0000;\"><sup>2</sup></span><span style=\"font-size: 10px;\"><span style=\"color: #ff0000;\"> + 2*i + 2</span> and <span style=\"color: #ff0000;\">B[i] = 1*i</span></span><span style=\"color: #ff0000;\"><sup>2</sup><span style=\"font-size: 10px;\"> + 2*i + 3</span></span></p>&#13;\n<p>Then given N=3: <span style=\"color: #ff0000;\">A[0~2] = {2, 6, 14}</span> and <span style=\"color: #ff0000;\">B[0~2] = {3, 6, 11}</span></p>&#13;\n<p>Among these two strictly increasing (sorted) arrays,&#160;{2, 6, 14} and&#160;{3, 6, 11}, the N-th (3rd) smallest element is 6.</p><h3 style=\"text-align:left\">Input</h3><p>The first line contains an integer, M (1 &#8804;&#160;M &#8804; 100), which indicates the number of test cases in the following. Each test case contains three lines: the first line contains three positive integers, p, q, r (i.e., coefficients of array A, separated by space), the second line contains three positive integers, x, y, z (i.e., coefficients of array B, separated by space), and the third line contains an integer, N (1 &#8804;&#160;N &#8804; 10^7), which is the size of arrays A and B.</p><h3 style=\"text-align:left\">Output</h3><p>For each test case, print the N-th smallest element among the two arrays (consisting of a total of 2*N elements).</p><hr /><div id=\"sampleinputoutput\"><table class=\"inputoutput\"><tr><td class=\"SampleCaption\"><h3 style=\"text-align:left\">Sample Input</h3></td><td class=\"SampleCaption\"><h3 style=\"text-align:left\">Sample Output</h3></td><td class=\"SampleCaption\"><h3 style=\"text-align:left\">Download Sample Input/Output</h3></td></tr><tr></tr><tr class=\"inputoutput\"><td class=\"inputoutput\" valign=\"top\"><pre class=\"sampleio\">5&#13;\n1 2 3&#13;\n2 2 2&#13;\n3&#13;\n1 2 3&#13;\n2 2 2&#13;\n4&#13;\n1 2 3&#13;\n2 2 2&#13;\n5&#13;\n4 3 10&#13;\n5 6 5&#13;\n10&#13;\n2 1 7&#13;\n10 6 5&#13;\n10&#13;\n</pre></td><td class=\"inputoutput\" valign=\"top\"><pre class=\"sampleio\">6&#13;\n6&#13;\n11&#13;\n109&#13;\n85&#13;\n</pre></td><td class=\"inputoutput\"><a>input</a>, <a>output</a><br /></td></tr></table></div><h3 style=\"text-align:left\">Hint</h3><ul>&#13;\n<li>If the time complexity of your algorithm is O(NlgN), you will get at most 0.6 point.</li>&#13;\n<li>If the time complexity of your algorithm is O(N), you will get at most 0.8 point.</li>&#13;\n<li>If the time complexity of your algorithm is O(lgN), you will get 1.0 (full) point.</li>&#13;\n</ul><hr /><table><tr><td>Keyword:</td><td></td></tr></table></div></body>\n</html><html xmlns=\"http://www.w3.org/1999/xhtml\"></html>"}