{"content": "<div id=\"problemtext\"><h2><a href=\"https://gpe3.acm-icpc.tw/domjudge2/pct/showproblem.php?probid=2015-07&amp;cid=5\" target=\"_blank\">2015-07:Minimum Path Sum</a></h2>Time Limit: 2 sec<p></p><h3 style=\"text-align:left\">Background</h3><p>Source of the problem: LeetCode</p><h3 style=\"text-align:left\">Description</h3><p>Given a <em>r</em>-by-<em>c</em>&#160;grid filled with non-negative numbers, find a path from top left to bottom right which&#160;<em>minimizes</em>&#160;the sum of all numbers along its path.</p>&#13;\n<p><strong>Note:</strong>&#160;You can only move either down or right at any point in time.</p><h3 style=\"text-align:left\">Input</h3><p>The first number, <em>n</em>, &#160;indicates the number of test cases, followed by the <em>n</em> test cases. Each test case begins with a line of two numbers, <em>r</em> and <em>c</em>, which indicate the number of rows and the number of columns for the test case; then the <em>r-</em>by-<em>c</em> array (grid) of numbers are listed.</p><h3 style=\"text-align:left\">Output</h3><p>For each test case, find a path from top left to bottom right which minimizes the sum of all numbers along its path, and please print the minimum sum in a single line.</p><hr /><div id=\"sampleinputoutput\"><table class=\"inputoutput\"><tr><td class=\"SampleCaption\"><h3 style=\"text-align:left\">Sample Input</h3></td><td class=\"SampleCaption\"><h3 style=\"text-align:left\">Sample Output</h3></td></tr><tr></tr><tr class=\"inputoutput\"><td class=\"inputoutput\" valign=\"top\"><pre class=\"sampleio\">2&#13;\n3 3&#13;\n1 3 1&#13;\n1 5 1&#13;\n4 2 1&#13;\n4 4&#13;\n1 1 1 2&#13;\n2 1 1 2&#13;\n2 1 1 1&#13;\n2 1 1 1&#13;\n</pre></td><td class=\"inputoutput\" valign=\"top\"><pre class=\"sampleio\">7&#13;\n7&#13;\n</pre></td></tr></table></div><h3 style=\"text-align:left\">Hint</h3><p>This problem is not difficult at all, don't give up, give it a try!</p>&#13;\n<!--\r\n<p>Create an array of the same size, and fill out the array square by square, from top to bottom, from left to right. The value to be filled in each square is the minimum path sum starting from the top-left square and ending at this particular square. Given a square, you only need to check out the value on the top and the value on the left so as to calculate the value to be filled in this square.</p>\r\n<p>For example, if the original grid (array) is:</p>\r\n<pre>1 3 1<br />1 5 1<br />4 2 1</pre>\r\n<p>Then you should create an array and fill it out like:</p>\r\n<pre>1 4 5<br />2 7 6<br />6 8 7</pre>\r\n<p>Finally the number in the bottom-right square is the answer!</p>\r\n--><hr /><table><tr><td>Source: </td><td>LeetCode</td></tr><tr><td>Author: </td><td>&#21555;&#20977;&#24375;</td></tr><tr><td>Keyword:</td><td></td></tr></table></div></body>\n</html><html xmlns=\"http://www.w3.org/1999/xhtml\"></html>"}