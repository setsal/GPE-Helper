{"content": "<div id=\"problemtext\"><h2><a href=\"https://gpe3.acm-icpc.tw/domjudge2/pct/showproblem.php?probid=11192&amp;cid=5\" target=\"_blank\">11192:Simple Minded Hashing</a></h2>Time Limit: 30 sec<p></p><h3 style=\"text-align:left\">Description</h3> \n<div class=\"Section1\"> \n  <table width=\"100%\" border=\"1\" cellpadding=\"0\" cellspacing=\"0\"> \n    <tr> \n      <td colspan=\"2\" class=\"Normal\"> <p align=\"center\" style=\"text-align:center\"><i><span style=\"font-size:20.0pt;font-family:Garamond;\">4<sup>th</sup> </span></i><i><span style=\"font-size:20.0pt;&#10;    font-family:Garamond;    \">IIUC</span></i><i><span style=\"font-size:20.0pt;font-family:Garamond;\"> </span></i><i><span style=\"font-size:20.0pt;font-family:Garamond;&#10;    \">Inter-University</span></i><i><span style=\"font-size:20.0pt;font-family:Garamond;\"> Programming Contest, 2005</span></i></p></td> \n    </tr> \n    <tr> \n      <td width=\"14%\" rowspan=\"3\" class=\"Normal\"> <p align=\"center\" style=\"text-align:center\"><b><span style=\"font-size:60.0pt;font-family:Arial\">H</span></b></p></td> \n      <td class=\"Normal\"> <p align=\"center\" style=\"text-align:center\"><b><span style=\"font-size:20.0pt;font-family:Arial\">Simple Minded Hashing</span></b></p></td> \n    </tr> \n    <tr> \n      <td class=\"Normal\"> <p><b><span style=\"font-size:11.0pt;font-family:Arial\">Input: standard input<br />\n      </span></b><b><span style=\"font-size:11.0pt;font-family:Arial\">Output: standard output</span></b></p>         </td> \n    </tr> \n    <tr> \n      <td class=\"Normal\"> <p><b><span style=\"font-size:11.0pt;font-family:Arial\">Problemsetter: </span></b><b><span style=\"font-size:11.0pt;  font-family:Arial\">Sohel Hafiz</span></b></p></td> \n    </tr> \n  </table> \n  <p style=\"text-align:justify\">All of you know a bit or two about hashing. It involves mapping an element into a numerical value using some mathematical function. In this problem we will consider a very &#8216;simple minded hashing&#8217;. It involves assigning numerical value to the alphabets and summing these values of the characters.</p> \n  <p style=\"text-align:justify\">For example, the string &#8220;acm&#8221; is mapped to 1 + 3 + 13 = 17. Unfortunately, this method does not give one-to-one mapping. The string &#8220;adl&#8221; also maps to 17 (1 + 4 + 12). This is called collision.</p> \n  <p style=\"text-align:justify\">In this problem you will have to find the number of strings of length <b>L, </b>which maps to an integer <b>S, </b>using the above hash function. You have to consider strings that have only lowercase letters in strictly ascending order.</p> \n  <p style=\"text-align:justify\">Suppose <b>L</b> = 3 and <b>S</b> = 10, there are 4 such strings.</p> \n  <ol start=\"1\" type=\"1\"> \n    <li style=\"text-align:justify;     \">abg</li> \n    <li style=\"text-align:justify;     \">acf</li> \n    <li style=\"text-align:justify;     \">ade</li> \n    <li style=\"text-align:justify;     \">bce</li> \n  </ol> \n  <p style=\"text-align:justify\"><span class=\"GramE\">agb</span> also produces 10 but the letters are not strictly in ascending order.</p> \n  <p style=\"text-align:justify\"><span class=\"GramE\">bh</span> also produces 10 but it has 2 letters.</p> \n  <p style=\"text-align:justify\"><b><span style=\"font-size:16.0pt;&#10;font-family:Arial\">Input</span></b></p> \n  <p style=\"text-align:justify\">There will be several cases. Each case consists of 2 integers<b> L and S</b>. <b>(0 &lt; L, S &lt; 10000)</b>. Input is terminated with 2 zeros.</p> \n  <p style=\"text-align:justify\"><b><span style=\"font-size:16.0pt;&#10;font-family:Arial\">Output</span></b></p> \n  <p style=\"text-align:justify\">For each case, output Case #: where # is replaced by case number. Then output the result. Follow the sample for exact format. The result will fit in 32 bit signed integers.</p> \n  <table width=\"100%\" border=\"1\" cellpadding=\"0\" cellspacing=\"0\"> \n    <tr> \n      <td width=\"308\" valign=\"top\" class=\"Normal\"> <p style=\"text-align:justify\"><b><span style=\"font-size:16.0pt;&#10;  font-family:Arial\">Sample Input</span></b></p></td> \n      <td width=\"308\" valign=\"top\" class=\"Normal\"> <p style=\"text-align:justify\"><b><span style=\"font-size:16.0pt;&#10;  font-family:Arial\">Output for Sample Input</span></b></p></td> \n    </tr> \n    <tr> \n      <td width=\"308\" valign=\"top\" class=\"Normal\"> <p class=\"style1\" style=\"text-align:justify\"><b><span style=\"font-family:&quot;Courier New&quot;\">3 10<br />\n      </span></b><b><span style=\"font-family:&quot;Courier New&quot;\">2 3<br />\n      </span></b><span style=\"font-size:12.0pt\">0 0</span></p>      </td> \n      <td width=\"308\" valign=\"top\" class=\"Normal\"> <p><b><span style=\"font-family:&quot;Courier New&quot;\">Case 1: 4<br />\n      </span></b><b><span style=\"font-family:&quot;Courier New&quot;\">Case 2: 1</span></b></p>        </td> \n    </tr> \n  </table> \n</div> \n<hr /><table><tr><td>Source: </td><td>http://uva.onlinejudge.org/external/109/10912.html</td></tr><tr><td>Keyword:</td><td>DP</td></tr></table></div></body>\n</html><html xmlns=\"http://www.w3.org/1999/xhtml\"></html>"}